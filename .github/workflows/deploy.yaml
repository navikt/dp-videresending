name: Build and deploy

on: [ push ]
jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
        contents: "write"
        checks: "write"
    steps:
      - uses: actions/checkout@v4
      - run: |
          mkdir -p reports
          docker-compose build 
          docker-compose run --volume ./reports:/reports/:rw --rm test --report-junit /reports/junit.xml
          ls -la  
          ls -la reports
          cat reports/junit.xml
      - uses: mikepenz/action-junit-report@v4
        if: always()
        with:
          report_paths: './reports/junit.xml'

  build:
    runs-on: ubuntu-latest
    permissions:
      contents: "read"
      id-token: "write"
    if: ${{ github.actor != 'dependabot[bot]' }}
    steps:
      - uses: actions/checkout@v4
      - uses: nais/docker-build-push@v0
        name: docker-build-push
        id: docker-build-push
        with:
          team: teamdagpenger
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          project_id:  ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
    outputs:
      image: ${{ steps.docker-build-push.outputs.image }}

  deploy-dev:
    needs: [ build, test ]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    strategy:
      matrix:
        cluster: [ dev-gcp, dev-fss ]
    steps:
      - uses: actions/checkout@v4
      - name: Prepare ConfigMap
        run: |-
          kubectl create configmap --dry-run=client -o yaml \
            --from-file .nais/${{ matrix.cluster }}/nginx.conf.d/ \
            --namespace teamdagpenger \
            dp-videresending-config \
          | kubectl label -f - --dry-run=client --local -o yaml \
            team=teamdagpenger | tee .nais/${{ matrix.cluster }}/nginx.yaml

      - uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: ${{ matrix.cluster }}
          RESOURCE: .nais/nais.yaml,.nais/${{ matrix.cluster }}/nginx.yaml
          VARS: .nais/${{ matrix.cluster }}/ingresses.yaml
          VAR: image=${{ needs.build.outputs.image }}
          PRINT_PAYLOAD: true

  deploy-prod:
    needs: [ build, test ]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    strategy:
      matrix:
        cluster: [ prod-gcp, prod-fss ]
    steps:
      - uses: actions/checkout@v4
      - name: Prepare ConfigMap
        run: |-
          kubectl create configmap --dry-run=client -o yaml \
            --from-file .nais/${{ matrix.cluster }}/nginx.conf.d/ \
            --namespace teamdagpenger \
            dp-videresending-config \
          | kubectl label -f - --dry-run=client --local -o yaml \
            team=teamdagpenger | tee .nais/${{ matrix.cluster }}/nginx.yaml
      - uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: ${{ matrix.cluster }}
          RESOURCE: .nais/nais.yaml,.nais/${{ matrix.cluster }}/nginx.yaml
          VARS: .nais/${{ matrix.cluster }}/ingresses.yaml
          VAR: image=${{ needs.build.outputs.image }}
          PRINT_PAYLOAD: true
